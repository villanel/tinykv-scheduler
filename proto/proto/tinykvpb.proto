syntax = "proto3";
package tinykvpb;

import "kvrpcpb.proto";
import "raft_serverpb.proto";
import "coprocessor.proto";

import "gogoproto/gogo.proto";

option (gogoproto.sizer_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;

// Serve as a distributed kv database. See the request and response definitions in
// kvrpcpb.proto
service TinyKv {
    // KV commands with mvcc/txn supported.
    rpc KvGet(kvrpcpb.GetRequest) returns (kvrpcpb.GetResponse) {}
    rpc KvScan(kvrpcpb.ScanRequest) returns (kvrpcpb.ScanResponse) {}
    rpc KvPrewrite(kvrpcpb.PrewriteRequest) returns (kvrpcpb.PrewriteResponse) {}
    rpc KvCommit(kvrpcpb.CommitRequest) returns (kvrpcpb.CommitResponse) {}
    rpc KvCheckTxnStatus(kvrpcpb.CheckTxnStatusRequest) returns (kvrpcpb.CheckTxnStatusResponse) {}
    rpc KvBatchRollback(kvrpcpb.BatchRollbackRequest) returns (kvrpcpb.BatchRollbackResponse) {}
    rpc KvResolveLock(kvrpcpb.ResolveLockRequest) returns (kvrpcpb.ResolveLockResponse) {}

    // RawKV commands.
    rpc RawGet(kvrpcpb.RawGetRequest) returns (kvrpcpb.RawGetResponse) {}
    rpc RawPut(kvrpcpb.RawPutRequest) returns (kvrpcpb.RawPutResponse) {}
    rpc RawDelete(kvrpcpb.RawDeleteRequest) returns (kvrpcpb.RawDeleteResponse) {}
    rpc RawScan(kvrpcpb.RawScanRequest) returns (kvrpcpb.RawScanResponse) {}

    // Raft commands (tinykv <-> tinykv).
    rpc Raft(stream raft_serverpb.RaftMessage) returns (raft_serverpb.Done) {}
    rpc Snapshot(stream raft_serverpb.SnapshotChunk) returns (raft_serverpb.Done) {}

    // Coprocessor 
    rpc Coprocessor(coprocessor.Request) returns (coprocessor.Response) {}

    rpc SAdd(kvrpcpb.SetAddRequest) returns (kvrpcpb.SetAddResponse);
    rpc SMembers(kvrpcpb.SetMembersRequest) returns (kvrpcpb.SetMembersResponse);
    rpc SRem(kvrpcpb.SetRemoveRequest) returns (kvrpcpb.SetRemoveResponse);
    rpc SIsMember(kvrpcpb.SetIsMemberRequest) returns (kvrpcpb.SetIsMemberResponse);
    rpc SCard(kvrpcpb.SetCardRequest) returns (kvrpcpb.SetCardResponse);
    rpc SUnion(kvrpcpb.SetUnionRequest) returns (kvrpcpb.SetUnionResponse);



}
